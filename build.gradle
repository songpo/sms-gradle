apply plugin: 'war'
apply plugin: 'tomcat'

repositories
{
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.2'
    }
}

dependencies
{
    //spring
    def springVersion = '4.0.2.RELEASE'
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"

    //security
    def securityVersion = '3.2.1.RELEASE'
    compile "org.springframework.security:spring-security-web:${securityVersion}"
    compile "org.springframework.security:spring-security-config:${securityVersion}"

    //spring-data-jpa
    def springDataJpaVersion = '1.5.0.RELEASE'
    compile "org.springframework.data:spring-data-jpa:${springDataJpaVersion}"

    //hibernate
    def hibernateVersion = '4.3.1.Final'
    compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
    compile "org.hibernate:hibernate-c3p0:${hibernateVersion}"

    //mysqlDrive
    def mysqlDriverVersion = '5.1.29'
    compile "mysql:mysql-connector-java:${mysqlDriverVersion}"

    //fileupload
    def fileuploadVersion = '1.3.1'
    compile "commons-fileupload:commons-fileupload:${fileuploadVersion}"

    //jstl
    def jstlVersion = '1.2'
    compile "jstl:jstl:${jstlVersion}"

    //slf4j
    def slf4jVersion = '1.7.6'
    compile "org.slf4j:slf4j-api:${slf4jVersion}"

    //logback
    def logbackExtVersion = '0.1.2'
    compile "org.logback-extensions:logback-ext-spring:${logbackExtVersion}"

    //servletApi
    def servletApiVersion = '3.0.1'
    providedCompile "javax.servlet:javax.servlet-api:${servletApiVersion}"

    def tomcatVersion = '7.0.52'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

}

tasks.withType(JavaCompile)
{
    options.encoding = "UTF-8";
}